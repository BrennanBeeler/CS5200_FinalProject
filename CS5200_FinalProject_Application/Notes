Changes From Proposal:
    Completed:
        1) Added genotype table
        2) Replaced origin cage for mouse with two recursive foreign keys
        3) How to get new users to be added to database?


        - Can move a mouse you manage into cage of another user- transfers manager status on
        single mouse ORRRRRRR you can transfer manage of entire cage of mice


    To be Changed:




Answered Questions:
1) How to control number of cages per rack - triggers



Questions:
1) Is if else a transaction - new_mouse, insert_mouse_cage_limit, update_mouse_cage_limit,
    insert_mouse_sex_restrict, update_mouse_sex_restrict, view_address, view_facility_access,
       delete_cage, delete_facility_access, delete_facility, delete_room, delete_rack, delete_genotype,
       delete_mouse, update_cage, update_mouse

TODO: Finished
- change add address so it allows same address if entered to reference same entry
- Create abstract class for UserMenu and AdminMenu - create statements etc. where applicable
- Add user view of facility access- but just their own
- turn new_address into transaction
- look to make transactions- delete_address etc.
- Remove filled slots from rack and instead use a trigger to determine if okay to add cage to
a rack- if inactive-> doesn't count
- test sex triggers
- CANNOT UPDATE MOUSE DETAILS WITHIN SAME CAGE AS TRIGGERS MORE THAN 5 MICE TRIGGER
- make sure cageID cant be origin cage on mouse update
- keep males and females separate




TODO: TODO
- REMOVE ALL SQL EXCEPTIONS- must be english


- Show possible values before insertion
- Make sure that each call to stored procedure is protected with catch that is appropriate
- add descriptions of data order
- go through all stored procedures and make sure to check comments
- test cage number triggers
- remove checks to see return type of execute etc.
- test everything
- make sure on deletion that it checks if something exists - delete_cage, delete_mouse
- for now going to keep update stuff simple- just update one at a time for both user and admin, but
    later can decide based on time if want to branch out and allow broader changes]
- can input empty line for fields?
- view mouse doesn't tell when no mice
- cover all normal errors with customized text
- checkout view ordering


TODO: MAYBE
- Increase facility name length allowed
- enum will accept integer values... Fix?
- remove roomID? use facilityID + Room Num instead?
- allow user to update room beyond just light
- allow user to update primary key of tables as admin?
- use https://stackoverflow.com/questions/18672643/how-to-print-a-table-of-information-in-java to
    create pretty tables
- make origin cage only breeding?


Thinking:
-Adding is easy - just input data when asked for it (both user and admin)
-Removing should be restrictive and only allow deletion of one at a time, since data should only
    be removed from database if there was some kind of entry error/massive change in real world
-Update should allow more broad scope changes
    + User should only be able to make small single serving updates...


-View
    -To view mouse - mouse data + cage + rack + room + facility + manager
        + Filter by various stuff - sex, manager, facility, room, rack, cage, genotype
